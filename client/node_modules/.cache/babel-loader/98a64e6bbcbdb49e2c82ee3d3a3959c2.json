{"ast":null,"code":"var _jsxFileName = \"D:\\\\BankingSystem\\\\client\\\\src\\\\AdminDashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport API_URL from './apiConfig';\nconst AdminDashboard = () => {\n  const navigate = useNavigate();\n  const managerId = localStorage.getItem('userId');\n  const [pendingAccounts, setPendingAccounts] = useState([]);\n  const [pendingTransactions, setPendingTransactions] = useState([]);\n  const [allAccounts, setAllAccounts] = useState([]);\n  const [allTransactions, setAllTransactions] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Filter and sort states\n  const [accountStatusFilter, setAccountStatusFilter] = useState('all');\n  const [transactionTypeFilter, setTransactionTypeFilter] = useState('all');\n  const [transactionStatusFilter, setTransactionStatusFilter] = useState('all');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [accountSortOrder, setAccountSortOrder] = useState('asc');\n  const [transactionSortOrder, setTransactionSortOrder] = useState('asc');\n\n  // Selected account for transactions\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n\n  // Modal state\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  useEffect(() => {\n    if (!managerId) {\n      navigate('/login');\n      return;\n    }\n    axios.get(`₹{API_URL}/api/auth/admin-dashboard/${managerId}`).then(res => {\n      console.log('Fetched Data:', res.data);\n      setPendingAccounts(res.data.pendingAccounts || []);\n      setPendingTransactions(res.data.pendingTransactions || []);\n      setAllAccounts(res.data.allAccounts || []);\n      setAllTransactions(res.data.allTransactions || []);\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      console.error('Fetch Error:', err);\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Error fetching data');\n    });\n  }, [managerId, navigate]);\n  const handleAccountAction = async (accountId, status) => {\n    console.log('handleAccountAction called with:', {\n      accountId,\n      status,\n      managerId\n    });\n    try {\n      const res = await axios.post(`${API_URL}/api/auth/admin/approve-account`, {\n        accountId,\n        status,\n        managerId\n      });\n      console.log('Account Action Response:', res.data);\n      setMessage(res.data.msg);\n      setPendingAccounts(prevAccounts => {\n        const updatedAccounts = prevAccounts.filter(a => a._id !== accountId);\n        console.log('Updated Pending Accounts:', updatedAccounts);\n        return updatedAccounts;\n      });\n      const updatedAllAccounts = await axios.get(`${API_URL}/api/auth/admin-dashboard/${managerId}`);\n      setAllAccounts(updatedAllAccounts.data.allAccounts || []);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Account Action Error:', err);\n      setMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || 'Error approving/rejecting account');\n    }\n  };\n  const handleTransactionAction = async (transactionId, status) => {\n    console.log('handleTransactionAction called with:', {\n      transactionId,\n      status,\n      managerId\n    });\n    try {\n      const res = await axios.post(`${API_URL}/api/auth/admin/approve-transaction`, {\n        transactionId,\n        status,\n        managerId\n      });\n      console.log('Transaction Action Response:', res.data);\n      setMessage(res.data.msg);\n      setPendingTransactions(prevTransactions => {\n        const updatedTransactions = prevTransactions.filter(t => t._id !== transactionId);\n        console.log('Updated Pending Transactions:', updatedTransactions);\n        return updatedTransactions;\n      });\n      const updatedAllTransactions = await axios.get(`${API_URL}/api/auth/admin-dashboard/${managerId}`);\n      setAllTransactions(updatedAllTransactions.data.allTransactions || []);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Transaction Action Error:', err);\n      setMessage(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.msg) || 'Error approving/rejecting transaction');\n    }\n  };\n\n  // Filter and sort accounts\n  const filteredAccounts = allAccounts.filter(account => accountStatusFilter === 'all' || account.status === accountStatusFilter).sort((a, b) => {\n    if (accountSortOrder === 'asc') {\n      return a.status.localeCompare(b.status);\n    }\n    return b.status.localeCompare(a.status);\n  });\n\n  // Filter and sort transactions\n  const filteredTransactions = allTransactions.filter(tx => {\n    if (!selectedAccountId) return false;\n    return tx.accountId._id === selectedAccountId && (transactionTypeFilter === 'all' || tx.type === transactionTypeFilter) && (transactionStatusFilter === 'all' || tx.status === transactionStatusFilter) && (!startDate || new Date(tx.createdAt) >= new Date(startDate)) && (!endDate || new Date(tx.createdAt) <= new Date(endDate));\n  }).sort((a, b) => {\n    if (transactionSortOrder === 'asc') {\n      return a.amount - b.amount;\n    }\n    return b.amount - a.amount;\n  });\n  const openModal = (type, data) => {\n    setModalContent({\n      type,\n      data\n    });\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n    setModalContent(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"dashboard-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"Admin Dashboard\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, message), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dashboard-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Pending Account Requests\"), pendingAccounts.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"No pending account requests.\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, pendingAccounts.map(account => /*#__PURE__*/React.createElement(\"li\", {\n    key: account._id,\n    className: \"dashboard-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard-card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCCB\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"dashboard-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, account.accountHolderName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"User: \", account.userId.name, \" (\", account.userId.email, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAccountAction(account._id, 'approved'),\n    className: \"action-button action-button--approve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Approve\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAccountAction(account._id, 'rejected'),\n    className: \"action-button action-button--decline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Decline\"))))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dashboard-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"Pending Transactions\"), pendingTransactions.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"No pending transactions.\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, pendingTransactions.map(tx => /*#__PURE__*/React.createElement(\"li\", {\n    key: tx._id,\n    className: \"dashboard-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard-card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, tx.transferId ? '🔄' : tx.type === 'deposit' ? '💵' : '💸'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"dashboard-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, tx.type.charAt(0).toUpperCase() + tx.type.slice(1), \" \", tx.transferId ? '(Transfer)' : ''), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, \"Amount: $\", tx.amount, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 41\n    }\n  }), \"User: \", tx.accountId.userId.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 53\n    }\n  }), \"Account: \", tx.accountId.accountHolderName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleTransactionAction(tx._id, 'approved'),\n    className: \"action-button action-button--approve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Approve\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleTransactionAction(tx._id, 'rejected'),\n    className: \"action-button action-button--decline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Decline\"))))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dashboard-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"All Accounts\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '1rem',\n      display: 'flex',\n      gap: '1rem',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"Filter by Status:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: accountStatusFilter,\n    onChange: e => setAccountStatusFilter(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"approved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, \"Approved\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"rejected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, \"Rejected\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"Sort by Status:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: accountSortOrder,\n    onChange: e => setAccountSortOrder(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, \"Ascending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"Descending\")))), filteredAccounts.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, \"No accounts found.\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, filteredAccounts.map(account => /*#__PURE__*/React.createElement(\"li\", {\n    key: account._id,\n    className: \"dashboard-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard-card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDFE6\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"dashboard-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, account.accountHolderName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, \"User: \", account.userId.name, \" (\", account.userId.email, \")\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 73\n    }\n  }), \"Status: \", account.status.charAt(0).toUpperCase() + account.status.slice(1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openModal('account', account),\n    className: \"action-button\",\n    style: {\n      backgroundColor: '#4B5EAA',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, \"View Details\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSelectedAccountId(account._id),\n    className: \"action-button\",\n    style: {\n      backgroundColor: '#2C7A7B',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, \"View Transactions\"))))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dashboard-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, \"Transactions for Selected Account\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '1rem',\n      display: 'flex',\n      gap: '1rem',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"Filter by Type:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: transactionTypeFilter,\n    onChange: e => setTransactionTypeFilter(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, \"Deposit\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"withdrawal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, \"Withdrawal\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, \"Filter by Status:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: transactionStatusFilter,\n    onChange: e => setTransactionStatusFilter(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"approved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, \"Approved\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"rejected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, \"Rejected\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, \"Start Date:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, \"End Date:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: endDate,\n    onChange: e => setEndDate(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, \"Sort by Amount:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: transactionSortOrder,\n    onChange: e => setTransactionSortOrder(e.target.value),\n    style: {\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, \"Ascending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }, \"Descending\")))), !selectedAccountId ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, \"Select an account to view its transactions.\") : filteredTransactions.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, \"No transactions found for this account.\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dashboard-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }, filteredTransactions.map(tx => /*#__PURE__*/React.createElement(\"li\", {\n    key: tx._id,\n    className: \"dashboard-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard-card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, tx.transferId ? '🔄' : tx.type === 'deposit' ? '💵' : '💸'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"dashboard-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, tx.type.charAt(0).toUpperCase() + tx.type.slice(1), \" \", tx.transferId ? '(Transfer)' : ''), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 19\n    }\n  }, \"Amount: \\u20B9\", tx.amount, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 41\n    }\n  }), \"User: \", tx.accountId.userId.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 53\n    }\n  }), \"Account: \", tx.accountId.accountHolderName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 62\n    }\n  }), \"Status: \", tx.status.charAt(0).toUpperCase() + tx.status.slice(1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openModal('transaction', tx),\n    className: \"action-button\",\n    style: {\n      backgroundColor: '#4B5EAA',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, \"View Details\"))))))), modalOpen && modalContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }, modalContent.type === 'account' ? 'Account Details' : 'Transaction Details'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closeModal,\n    className: \"modal-close-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }\n  }, modalContent.type === 'account' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 22\n    }\n  }, \"Account Holder:\"), \" \", modalContent.data.accountHolderName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 22\n    }\n  }, \"User:\"), \" \", modalContent.data.userId.name, \" (\", modalContent.data.userId.email, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 22\n    }\n  }, \"Status:\"), \" \", modalContent.data.status.charAt(0).toUpperCase() + modalContent.data.status.slice(1)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 22\n    }\n  }, \"Account Number:\"), \" \", modalContent.data.accountNumber || 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 22\n    }\n  }, \"Balance:\"), \" \\u20B9\", modalContent.data.balance || 0)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 22\n    }\n  }, \"Type:\"), \" \", modalContent.data.type.charAt(0).toUpperCase() + modalContent.data.type.slice(1), \" \", modalContent.data.transferId ? '(Transfer)' : ''), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 22\n    }\n  }, \"Amount:\"), \" \\u20B9\", modalContent.data.amount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 22\n    }\n  }, \"Account:\"), \" \", modalContent.data.accountId.accountHolderName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 22\n    }\n  }, \"User:\"), \" \", modalContent.data.accountId.userId.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 22\n    }\n  }, \"Status:\"), \" \", modalContent.data.status.charAt(0).toUpperCase() + modalContent.data.status.slice(1)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 22\n    }\n  }, \"Date:\"), \" \", modalContent.data.createdAt ? new Date(modalContent.data.createdAt).toLocaleString() : 'Date not available'), modalContent.data.transferId && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 55\n    }\n  }, \"Transfer ID:\"), \" \", modalContent.data.transferId))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dashboard-footer-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }\n  }, \"Welcome, Manager! \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/logout\",\n    className: \"dashboard-logout-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }, \"Logout\"))));\n};\nexport default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","axios","API_URL","AdminDashboard","navigate","managerId","localStorage","getItem","pendingAccounts","setPendingAccounts","pendingTransactions","setPendingTransactions","allAccounts","setAllAccounts","allTransactions","setAllTransactions","message","setMessage","accountStatusFilter","setAccountStatusFilter","transactionTypeFilter","setTransactionTypeFilter","transactionStatusFilter","setTransactionStatusFilter","startDate","setStartDate","endDate","setEndDate","accountSortOrder","setAccountSortOrder","transactionSortOrder","setTransactionSortOrder","selectedAccountId","setSelectedAccountId","modalOpen","setModalOpen","modalContent","setModalContent","get","then","res","console","log","data","catch","err","_err$response","_err$response$data","error","response","msg","handleAccountAction","accountId","status","post","prevAccounts","updatedAccounts","filter","a","_id","updatedAllAccounts","_err$response2","_err$response2$data","handleTransactionAction","transactionId","prevTransactions","updatedTransactions","t","updatedAllTransactions","_err$response3","_err$response3$data","filteredAccounts","account","sort","b","localeCompare","filteredTransactions","tx","type","Date","createdAt","amount","openModal","closeModal","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","key","accountHolderName","userId","name","email","onClick","transferId","charAt","toUpperCase","slice","style","marginBottom","display","gap","alignItems","value","onChange","e","target","marginLeft","backgroundColor","color","flexWrap","accountNumber","balance","toLocaleString","to"],"sources":["D:/BankingSystem/client/src/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport API_URL from './apiConfig';\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const managerId = localStorage.getItem('userId');\r\n  const [pendingAccounts, setPendingAccounts] = useState([]);\r\n  const [pendingTransactions, setPendingTransactions] = useState([]);\r\n  const [allAccounts, setAllAccounts] = useState([]);\r\n  const [allTransactions, setAllTransactions] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Filter and sort states\r\n  const [accountStatusFilter, setAccountStatusFilter] = useState('all');\r\n  const [transactionTypeFilter, setTransactionTypeFilter] = useState('all');\r\n  const [transactionStatusFilter, setTransactionStatusFilter] = useState('all');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [accountSortOrder, setAccountSortOrder] = useState('asc');\r\n  const [transactionSortOrder, setTransactionSortOrder] = useState('asc');\r\n\r\n  // Selected account for transactions\r\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n\r\n  // Modal state\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalContent, setModalContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!managerId) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    axios\r\n      .get(`₹{API_URL}/api/auth/admin-dashboard/${managerId}`)\r\n      .then(res => {\r\n        console.log('Fetched Data:', res.data);\r\n        setPendingAccounts(res.data.pendingAccounts || []);\r\n        setPendingTransactions(res.data.pendingTransactions || []);\r\n        setAllAccounts(res.data.allAccounts || []);\r\n        setAllTransactions(res.data.allTransactions || []);\r\n      })\r\n      .catch(err => {\r\n        console.error('Fetch Error:', err);\r\n        setMessage(err.response?.data?.msg || 'Error fetching data');\r\n      });\r\n  }, [managerId, navigate]);\r\n\r\n  const handleAccountAction = async (accountId, status) => {\r\n    console.log('handleAccountAction called with:', { accountId, status, managerId });\r\n    try {\r\n      const res = await axios.post(`${API_URL}/api/auth/admin/approve-account`, {\r\n        accountId,\r\n        status,\r\n        managerId,\r\n      });\r\n      console.log('Account Action Response:', res.data);\r\n      setMessage(res.data.msg);\r\n      setPendingAccounts(prevAccounts => {\r\n        const updatedAccounts = prevAccounts.filter(a => a._id !== accountId);\r\n        console.log('Updated Pending Accounts:', updatedAccounts);\r\n        return updatedAccounts;\r\n      });\r\n      const updatedAllAccounts = await axios.get(`${API_URL}/api/auth/admin-dashboard/${managerId}`);\r\n      setAllAccounts(updatedAllAccounts.data.allAccounts || []);\r\n    } catch (err) {\r\n      console.error('Account Action Error:', err);\r\n      setMessage(err.response?.data?.msg || 'Error approving/rejecting account');\r\n    }\r\n  };\r\n\r\n  const handleTransactionAction = async (transactionId, status) => {\r\n    console.log('handleTransactionAction called with:', { transactionId, status, managerId });\r\n    try {\r\n      const res = await axios.post(`${API_URL}/api/auth/admin/approve-transaction`, {\r\n        transactionId,\r\n        status,\r\n        managerId,\r\n      });\r\n      console.log('Transaction Action Response:', res.data);\r\n      setMessage(res.data.msg);\r\n      setPendingTransactions(prevTransactions => {\r\n        const updatedTransactions = prevTransactions.filter(t => t._id !== transactionId);\r\n        console.log('Updated Pending Transactions:', updatedTransactions);\r\n        return updatedTransactions;\r\n      });\r\n      const updatedAllTransactions = await axios.get(`${API_URL}/api/auth/admin-dashboard/${managerId}`);\r\n      setAllTransactions(updatedAllTransactions.data.allTransactions || []);\r\n    } catch (err) {\r\n      console.error('Transaction Action Error:', err);\r\n      setMessage(err.response?.data?.msg || 'Error approving/rejecting transaction');\r\n    }\r\n  };\r\n\r\n  // Filter and sort accounts\r\n  const filteredAccounts = allAccounts\r\n    .filter(account => accountStatusFilter === 'all' || account.status === accountStatusFilter)\r\n    .sort((a, b) => {\r\n      if (accountSortOrder === 'asc') {\r\n        return a.status.localeCompare(b.status);\r\n      }\r\n      return b.status.localeCompare(a.status);\r\n    });\r\n\r\n  // Filter and sort transactions\r\n  const filteredTransactions = allTransactions\r\n    .filter(tx => {\r\n      if (!selectedAccountId) return false;\r\n      return (\r\n        tx.accountId._id === selectedAccountId &&\r\n        (transactionTypeFilter === 'all' || tx.type === transactionTypeFilter) &&\r\n        (transactionStatusFilter === 'all' || tx.status === transactionStatusFilter) &&\r\n        (!startDate || new Date(tx.createdAt) >= new Date(startDate)) &&\r\n        (!endDate || new Date(tx.createdAt) <= new Date(endDate))\r\n      );\r\n    })\r\n    .sort((a, b) => {\r\n      if (transactionSortOrder === 'asc') {\r\n        return a.amount - b.amount;\r\n      }\r\n      return b.amount - a.amount;\r\n    });\r\n\r\n  const openModal = (type, data) => {\r\n    setModalContent({ type, data });\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setModalContent(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2 className=\"dashboard-title\">Admin Dashboard</h2>\r\n      {message && <p className=\"dashboard-message\">{message}</p>}\r\n\r\n      {/* Pending Accounts Section */}\r\n      <section className=\"dashboard-section\">\r\n        <h3 className=\"dashboard-section-title\">Pending Account Requests</h3>\r\n        {pendingAccounts.length === 0 ? (\r\n          <p className=\"dashboard-empty\">No pending account requests.</p>\r\n        ) : (\r\n          <ul className=\"dashboard-list\">\r\n            {pendingAccounts.map(account => (\r\n              <li key={account._id} className=\"dashboard-card\">\r\n                <span className=\"dashboard-card-icon\">📋</span>\r\n                <div className=\"dashboard-card-content\">\r\n                  <h4 className=\"dashboard-card-title\">{account.accountHolderName}</h4>\r\n                  <p className=\"dashboard-card-text\">\r\n                    User: {account.userId.name} ({account.userId.email})\r\n                  </p>\r\n                  <div className=\"dashboard-card-actions\">\r\n                    <button\r\n                      onClick={() => handleAccountAction(account._id, 'approved')}\r\n                      className=\"action-button action-button--approve\"\r\n                    >\r\n                      Approve\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleAccountAction(account._id, 'rejected')}\r\n                      className=\"action-button action-button--decline\"\r\n                    >\r\n                      Decline\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n\r\n      {/* Pending Transactions Section */}\r\n      <section className=\"dashboard-section\">\r\n        <h3 className=\"dashboard-section-title\">Pending Transactions</h3>\r\n        {pendingTransactions.length === 0 ? (\r\n          <p className=\"dashboard-empty\">No pending transactions.</p>\r\n        ) : (\r\n          <ul className=\"dashboard-list\">\r\n            {pendingTransactions.map(tx => (\r\n              <li key={tx._id} className=\"dashboard-card\">\r\n                <span className=\"dashboard-card-icon\">\r\n                  {tx.transferId ? '🔄' : tx.type === 'deposit' ? '💵' : '💸'}\r\n                </span>\r\n                <div className=\"dashboard-card-content\">\r\n                  <h4 className=\"dashboard-card-title\">\r\n                    {tx.type.charAt(0).toUpperCase() + tx.type.slice(1)} {tx.transferId ? '(Transfer)' : ''}\r\n                  </h4>\r\n                  <p className=\"dashboard-card-text\">\r\n                    Amount: ${tx.amount}<br />\r\n                    User: {tx.accountId.userId.name}<br />\r\n                    Account: {tx.accountId.accountHolderName}\r\n                  </p>\r\n                  <div className=\"dashboard-card-actions\">\r\n                    <button\r\n                      onClick={() => handleTransactionAction(tx._id, 'approved')}\r\n                      className=\"action-button action-button--approve\"\r\n                    >\r\n                      Approve\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleTransactionAction(tx._id, 'rejected')}\r\n                      className=\"action-button action-button--decline\"\r\n                    >\r\n                      Decline\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n\r\n      {/* All Accounts Section */}\r\n      <section className=\"dashboard-section\">\r\n        <h3 className=\"dashboard-section-title\">All Accounts</h3>\r\n        <div style={{ marginBottom: '1rem', display: 'flex', gap: '1rem', alignItems: 'center' }}>\r\n          <label>\r\n            Filter by Status:\r\n            <select\r\n              value={accountStatusFilter}\r\n              onChange={e => setAccountStatusFilter(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"approved\">Approved</option>\r\n              <option value=\"rejected\">Rejected</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Sort by Status:\r\n            <select\r\n              value={accountSortOrder}\r\n              onChange={e => setAccountSortOrder(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            >\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        {filteredAccounts.length === 0 ? (\r\n          <p className=\"dashboard-empty\">No accounts found.</p>\r\n        ) : (\r\n          <ul className=\"dashboard-list\">\r\n            {filteredAccounts.map(account => (\r\n              <li key={account._id} className=\"dashboard-card\">\r\n                <span className=\"dashboard-card-icon\">🏦</span>\r\n                <div className=\"dashboard-card-content\">\r\n                  <h4 className=\"dashboard-card-title\">{account.accountHolderName}</h4>\r\n                  <p className=\"dashboard-card-text\">\r\n                    User: {account.userId.name} ({account.userId.email})<br />\r\n                    Status: {account.status.charAt(0).toUpperCase() + account.status.slice(1)}\r\n                  </p>\r\n                  <div className=\"dashboard-card-actions\">\r\n                    <button\r\n                      onClick={() => openModal('account', account)}\r\n                      className=\"action-button\"\r\n                      style={{ backgroundColor: '#4B5EAA', color: 'white' }}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                    <button\r\n                      onClick={() => setSelectedAccountId(account._id)}\r\n                      className=\"action-button\"\r\n                      style={{ backgroundColor: '#2C7A7B', color: 'white' }}\r\n                    >\r\n                      View Transactions\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n\r\n      {/* All Transactions Section */}\r\n      <section className=\"dashboard-section\">\r\n        <h3 className=\"dashboard-section-title\">Transactions for Selected Account</h3>\r\n        <div style={{ marginBottom: '1rem', display: 'flex', gap: '1rem', flexWrap: 'wrap', alignItems: 'center' }}>\r\n          <label>\r\n            Filter by Type:\r\n            <select\r\n              value={transactionTypeFilter}\r\n              onChange={e => setTransactionTypeFilter(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"deposit\">Deposit</option>\r\n              <option value=\"withdrawal\">Withdrawal</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Filter by Status:\r\n            <select\r\n              value={transactionStatusFilter}\r\n              onChange={e => setTransactionStatusFilter(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"approved\">Approved</option>\r\n              <option value=\"rejected\">Rejected</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Start Date:\r\n            <input\r\n              type=\"date\"\r\n              value={startDate}\r\n              onChange={e => setStartDate(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            />\r\n          </label>\r\n          <label>\r\n            End Date:\r\n            <input\r\n              type=\"date\"\r\n              value={endDate}\r\n              onChange={e => setEndDate(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Sort by Amount:\r\n            <select\r\n              value={transactionSortOrder}\r\n              onChange={e => setTransactionSortOrder(e.target.value)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            >\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        {!selectedAccountId ? (\r\n          <p className=\"dashboard-empty\">Select an account to view its transactions.</p>\r\n        ) : filteredTransactions.length === 0 ? (\r\n          <p className=\"dashboard-empty\">No transactions found for this account.</p>\r\n        ) : (\r\n          <ul className=\"dashboard-list\">\r\n            {filteredTransactions.map(tx => (\r\n              <li key={tx._id} className=\"dashboard-card\">\r\n                <span className=\"dashboard-card-icon\">\r\n                  {tx.transferId ? '🔄' : tx.type === 'deposit' ? '💵' : '💸'}\r\n                </span>\r\n                <div className=\"dashboard-card-content\">\r\n                  <h4 className=\"dashboard-card-title\">\r\n                    {tx.type.charAt(0).toUpperCase() + tx.type.slice(1)} {tx.transferId ? '(Transfer)' : ''}\r\n                  </h4>\r\n                  <p className=\"dashboard-card-text\">\r\n                    Amount: ₹{tx.amount}<br />\r\n                    User: {tx.accountId.userId.name}<br />\r\n                    Account: {tx.accountId.accountHolderName}<br />\r\n                    Status: {tx.status.charAt(0).toUpperCase() + tx.status.slice(1)}\r\n                  </p>\r\n                  <div className=\"dashboard-card-actions\">\r\n                    <button\r\n                      onClick={() => openModal('transaction', tx)}\r\n                      className=\"action-button\"\r\n                      style={{ backgroundColor: '#4B5EAA', color: 'white' }}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n\r\n      {/* Modal for Viewing Details */}\r\n      {modalOpen && modalContent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                {modalContent.type === 'account' ? 'Account Details' : 'Transaction Details'}\r\n              </h3>\r\n              <button onClick={closeModal} className=\"modal-close-button\">\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {modalContent.type === 'account' ? (\r\n                <div>\r\n                  <p><strong>Account Holder:</strong> {modalContent.data.accountHolderName}</p>\r\n                  <p><strong>User:</strong> {modalContent.data.userId.name} ({modalContent.data.userId.email})</p>\r\n                  <p><strong>Status:</strong> {modalContent.data.status.charAt(0).toUpperCase() + modalContent.data.status.slice(1)}</p>\r\n                  <p><strong>Account Number:</strong> {modalContent.data.accountNumber || 'N/A'}</p>\r\n                  <p><strong>Balance:</strong> ₹{modalContent.data.balance || 0}</p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p><strong>Type:</strong> {modalContent.data.type.charAt(0).toUpperCase() + modalContent.data.type.slice(1)} {modalContent.data.transferId ? '(Transfer)' : ''}</p>\r\n                  <p><strong>Amount:</strong> ₹{modalContent.data.amount}</p>\r\n                  <p><strong>Account:</strong> {modalContent.data.accountId.accountHolderName}</p>\r\n                  <p><strong>User:</strong> {modalContent.data.accountId.userId.name}</p>\r\n                  <p><strong>Status:</strong> {modalContent.data.status.charAt(0).toUpperCase() + modalContent.data.status.slice(1)}</p>\r\n                  <p><strong>Date:</strong> {modalContent.data.createdAt ? new Date(modalContent.data.createdAt).toLocaleString() : 'Date not available'}</p>\r\n                  {modalContent.data.transferId && <p><strong>Transfer ID:</strong> {modalContent.data.transferId}</p>}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Logout Link */}\r\n      <div className=\"dashboard-footer\">\r\n        <p className=\"dashboard-footer-text\">\r\n          Welcome, Manager! <Link to=\"/logout\" className=\"dashboard-logout-link\">Logout</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,aAAa;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACqB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACuB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACyB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAM,CAACmC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,SAAS,EAAE;MACdD,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IACAH,KAAK,CACFqC,GAAG,CAAC,uCAAuCjC,SAAS,EAAE,CAAC,CACvDkC,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAACG,IAAI,CAAC;MACtClC,kBAAkB,CAAC+B,GAAG,CAACG,IAAI,CAACnC,eAAe,IAAI,EAAE,CAAC;MAClDG,sBAAsB,CAAC6B,GAAG,CAACG,IAAI,CAACjC,mBAAmB,IAAI,EAAE,CAAC;MAC1DG,cAAc,CAAC2B,GAAG,CAACG,IAAI,CAAC/B,WAAW,IAAI,EAAE,CAAC;MAC1CG,kBAAkB,CAACyB,GAAG,CAACG,IAAI,CAAC7B,eAAe,IAAI,EAAE,CAAC;IACpD,CAAC,CAAC,CACD8B,KAAK,CAACC,GAAG,IAAI;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZN,OAAO,CAACO,KAAK,CAAC,cAAc,EAAEH,GAAG,CAAC;MAClC5B,UAAU,CAAC,EAAA6B,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBG,GAAG,KAAI,qBAAqB,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC,EAAE,CAAC7C,SAAS,EAAED,QAAQ,CAAC,CAAC;EAEzB,MAAM+C,mBAAmB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;IACvDZ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;MAAEU,SAAS;MAAEC,MAAM;MAAEhD;IAAU,CAAC,CAAC;IACjF,IAAI;MACF,MAAMmC,GAAG,GAAG,MAAMvC,KAAK,CAACqD,IAAI,CAAC,GAAGpD,OAAO,iCAAiC,EAAE;QACxEkD,SAAS;QACTC,MAAM;QACNhD;MACF,CAAC,CAAC;MACFoC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAACG,IAAI,CAAC;MACjD1B,UAAU,CAACuB,GAAG,CAACG,IAAI,CAACO,GAAG,CAAC;MACxBzC,kBAAkB,CAAC8C,YAAY,IAAI;QACjC,MAAMC,eAAe,GAAGD,YAAY,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKP,SAAS,CAAC;QACrEX,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEc,eAAe,CAAC;QACzD,OAAOA,eAAe;MACxB,CAAC,CAAC;MACF,MAAMI,kBAAkB,GAAG,MAAM3D,KAAK,CAACqC,GAAG,CAAC,GAAGpC,OAAO,6BAA6BG,SAAS,EAAE,CAAC;MAC9FQ,cAAc,CAAC+C,kBAAkB,CAACjB,IAAI,CAAC/B,WAAW,IAAI,EAAE,CAAC;IAC3D,CAAC,CAAC,OAAOiC,GAAG,EAAE;MAAA,IAAAgB,cAAA,EAAAC,mBAAA;MACZrB,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEH,GAAG,CAAC;MAC3C5B,UAAU,CAAC,EAAA4C,cAAA,GAAAhB,GAAG,CAACI,QAAQ,cAAAY,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclB,IAAI,cAAAmB,mBAAA,uBAAlBA,mBAAA,CAAoBZ,GAAG,KAAI,mCAAmC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMa,uBAAuB,GAAG,MAAAA,CAAOC,aAAa,EAAEX,MAAM,KAAK;IAC/DZ,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE;MAAEsB,aAAa;MAAEX,MAAM;MAAEhD;IAAU,CAAC,CAAC;IACzF,IAAI;MACF,MAAMmC,GAAG,GAAG,MAAMvC,KAAK,CAACqD,IAAI,CAAC,GAAGpD,OAAO,qCAAqC,EAAE;QAC5E8D,aAAa;QACbX,MAAM;QACNhD;MACF,CAAC,CAAC;MACFoC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,GAAG,CAACG,IAAI,CAAC;MACrD1B,UAAU,CAACuB,GAAG,CAACG,IAAI,CAACO,GAAG,CAAC;MACxBvC,sBAAsB,CAACsD,gBAAgB,IAAI;QACzC,MAAMC,mBAAmB,GAAGD,gBAAgB,CAACR,MAAM,CAACU,CAAC,IAAIA,CAAC,CAACR,GAAG,KAAKK,aAAa,CAAC;QACjFvB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEwB,mBAAmB,CAAC;QACjE,OAAOA,mBAAmB;MAC5B,CAAC,CAAC;MACF,MAAME,sBAAsB,GAAG,MAAMnE,KAAK,CAACqC,GAAG,CAAC,GAAGpC,OAAO,6BAA6BG,SAAS,EAAE,CAAC;MAClGU,kBAAkB,CAACqD,sBAAsB,CAACzB,IAAI,CAAC7B,eAAe,IAAI,EAAE,CAAC;IACvE,CAAC,CAAC,OAAO+B,GAAG,EAAE;MAAA,IAAAwB,cAAA,EAAAC,mBAAA;MACZ7B,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEH,GAAG,CAAC;MAC/C5B,UAAU,CAAC,EAAAoD,cAAA,GAAAxB,GAAG,CAACI,QAAQ,cAAAoB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc1B,IAAI,cAAA2B,mBAAA,uBAAlBA,mBAAA,CAAoBpB,GAAG,KAAI,uCAAuC,CAAC;IAChF;EACF,CAAC;;EAED;EACA,MAAMqB,gBAAgB,GAAG3D,WAAW,CACjC6C,MAAM,CAACe,OAAO,IAAItD,mBAAmB,KAAK,KAAK,IAAIsD,OAAO,CAACnB,MAAM,KAAKnC,mBAAmB,CAAC,CAC1FuD,IAAI,CAAC,CAACf,CAAC,EAAEgB,CAAC,KAAK;IACd,IAAI9C,gBAAgB,KAAK,KAAK,EAAE;MAC9B,OAAO8B,CAAC,CAACL,MAAM,CAACsB,aAAa,CAACD,CAAC,CAACrB,MAAM,CAAC;IACzC;IACA,OAAOqB,CAAC,CAACrB,MAAM,CAACsB,aAAa,CAACjB,CAAC,CAACL,MAAM,CAAC;EACzC,CAAC,CAAC;;EAEJ;EACA,MAAMuB,oBAAoB,GAAG9D,eAAe,CACzC2C,MAAM,CAACoB,EAAE,IAAI;IACZ,IAAI,CAAC7C,iBAAiB,EAAE,OAAO,KAAK;IACpC,OACE6C,EAAE,CAACzB,SAAS,CAACO,GAAG,KAAK3B,iBAAiB,KACrCZ,qBAAqB,KAAK,KAAK,IAAIyD,EAAE,CAACC,IAAI,KAAK1D,qBAAqB,CAAC,KACrEE,uBAAuB,KAAK,KAAK,IAAIuD,EAAE,CAACxB,MAAM,KAAK/B,uBAAuB,CAAC,KAC3E,CAACE,SAAS,IAAI,IAAIuD,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC,IAAI,IAAID,IAAI,CAACvD,SAAS,CAAC,CAAC,KAC5D,CAACE,OAAO,IAAI,IAAIqD,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC,IAAI,IAAID,IAAI,CAACrD,OAAO,CAAC,CAAC;EAE7D,CAAC,CAAC,CACD+C,IAAI,CAAC,CAACf,CAAC,EAAEgB,CAAC,KAAK;IACd,IAAI5C,oBAAoB,KAAK,KAAK,EAAE;MAClC,OAAO4B,CAAC,CAACuB,MAAM,GAAGP,CAAC,CAACO,MAAM;IAC5B;IACA,OAAOP,CAAC,CAACO,MAAM,GAAGvB,CAAC,CAACuB,MAAM;EAC5B,CAAC,CAAC;EAEJ,MAAMC,SAAS,GAAGA,CAACJ,IAAI,EAAEnC,IAAI,KAAK;IAChCN,eAAe,CAAC;MAAEyC,IAAI;MAAEnC;IAAK,CAAC,CAAC;IAC/BR,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMgD,UAAU,GAAGA,CAAA,KAAM;IACvBhD,YAAY,CAAC,KAAK,CAAC;IACnBE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEzC,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAmB,CAAC,EACnD3E,OAAO,iBAAIpB,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE3E,OAAW,CAAC,eAG1DpB,KAAA,CAAAwF,aAAA;IAASC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0BAA4B,CAAC,EACpEnF,eAAe,CAACoF,MAAM,KAAK,CAAC,gBAC3BhG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,8BAA+B,CAAC,gBAE/D/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BnF,eAAe,CAACqF,GAAG,CAACrB,OAAO,iBAC1B5E,KAAA,CAAAwF,aAAA;IAAIU,GAAG,EAAEtB,OAAO,CAACb,GAAI;IAAC0B,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9C/F,KAAA,CAAAwF,aAAA;IAAMC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAQ,CAAC,eAC/C/F,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEnB,OAAO,CAACuB,iBAAsB,CAAC,eACrEnG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAC3B,EAACnB,OAAO,CAACwB,MAAM,CAACC,IAAI,EAAC,IAAE,EAACzB,OAAO,CAACwB,MAAM,CAACE,KAAK,EAAC,GAClD,CAAC,eACJtG,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMhD,mBAAmB,CAACqB,OAAO,CAACb,GAAG,EAAE,UAAU,CAAE;IAC5D0B,SAAS,EAAC,sCAAsC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjD,SAEO,CAAC,eACT/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMhD,mBAAmB,CAACqB,OAAO,CAACb,GAAG,EAAE,UAAU,CAAE;IAC5D0B,SAAS,EAAC,sCAAsC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjD,SAEO,CACL,CACF,CACH,CACL,CACC,CAEC,CAAC,eAGV/F,KAAA,CAAAwF,aAAA;IAASC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sBAAwB,CAAC,EAChEjF,mBAAmB,CAACkF,MAAM,KAAK,CAAC,gBAC/BhG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0BAA2B,CAAC,gBAE3D/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BjF,mBAAmB,CAACmF,GAAG,CAAChB,EAAE,iBACzBjF,KAAA,CAAAwF,aAAA;IAAIU,GAAG,EAAEjB,EAAE,CAAClB,GAAI;IAAC0B,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzC/F,KAAA,CAAAwF,aAAA;IAAMC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClCd,EAAE,CAACuB,UAAU,GAAG,IAAI,GAAGvB,EAAE,CAACC,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,IACnD,CAAC,eACPlF,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjCd,EAAE,CAACC,IAAI,CAACuB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGzB,EAAE,CAACC,IAAI,CAACyB,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC,EAAC1B,EAAE,CAACuB,UAAU,GAAG,YAAY,GAAG,EACnF,CAAC,eACLxG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WACxB,EAACd,EAAE,CAACI,MAAM,eAACrF,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,UACpB,EAACd,EAAE,CAACzB,SAAS,CAAC4C,MAAM,CAACC,IAAI,eAACrG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,aAC7B,EAACd,EAAE,CAACzB,SAAS,CAAC2C,iBACtB,CAAC,eACJnG,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMpC,uBAAuB,CAACc,EAAE,CAAClB,GAAG,EAAE,UAAU,CAAE;IAC3D0B,SAAS,EAAC,sCAAsC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjD,SAEO,CAAC,eACT/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMpC,uBAAuB,CAACc,EAAE,CAAClB,GAAG,EAAE,UAAU,CAAE;IAC3D0B,SAAS,EAAC,sCAAsC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjD,SAEO,CACL,CACF,CACH,CACL,CACC,CAEC,CAAC,eAGV/F,KAAA,CAAAwF,aAAA;IAASC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAgB,CAAC,eACzD/F,KAAA,CAAAwF,aAAA;IAAKoB,KAAK,EAAE;MAAEC,YAAY,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvF/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,mBAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEyB,KAAK,EAAE3F,mBAAoB;IAC3B4F,QAAQ,EAAEC,CAAC,IAAI5F,sBAAsB,CAAC4F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IACtDL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEhC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,KAAK;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CAAC,eAChC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,SAAS;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,eACxC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,UAAU;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAAC,eAC1C/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,UAAU;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CACnC,CACH,CAAC,eACR/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,iBAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEyB,KAAK,EAAEjF,gBAAiB;IACxBkF,QAAQ,EAAEC,CAAC,IAAIlF,mBAAmB,CAACkF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IACnDL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEhC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,KAAK;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eACtC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,MAAM;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CACjC,CACH,CACJ,CAAC,EACLpB,gBAAgB,CAACqB,MAAM,KAAK,CAAC,gBAC5BhG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAqB,CAAC,gBAErD/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BpB,gBAAgB,CAACsB,GAAG,CAACrB,OAAO,iBAC3B5E,KAAA,CAAAwF,aAAA;IAAIU,GAAG,EAAEtB,OAAO,CAACb,GAAI;IAAC0B,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9C/F,KAAA,CAAAwF,aAAA;IAAMC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAQ,CAAC,eAC/C/F,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEnB,OAAO,CAACuB,iBAAsB,CAAC,eACrEnG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAC3B,EAACnB,OAAO,CAACwB,MAAM,CAACC,IAAI,EAAC,IAAE,EAACzB,OAAO,CAACwB,MAAM,CAACE,KAAK,EAAC,GAAC,eAAAtG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,YAClD,EAACnB,OAAO,CAACnB,MAAM,CAACgD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG9B,OAAO,CAACnB,MAAM,CAACkD,KAAK,CAAC,CAAC,CACvE,CAAC,eACJ3G,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMjB,SAAS,CAAC,SAAS,EAAEV,OAAO,CAAE;IAC7Ca,SAAS,EAAC,eAAe;IACzBmB,KAAK,EAAE;MAAEU,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvD,cAEO,CAAC,eACT/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMlE,oBAAoB,CAACuC,OAAO,CAACb,GAAG,CAAE;IACjD0B,SAAS,EAAC,eAAe;IACzBmB,KAAK,EAAE;MAAEU,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvD,mBAEO,CACL,CACF,CACH,CACL,CACC,CAEC,CAAC,eAGV/F,KAAA,CAAAwF,aAAA;IAASC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mCAAqC,CAAC,eAC9E/F,KAAA,CAAAwF,aAAA;IAAKoB,KAAK,EAAE;MAAEC,YAAY,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAES,QAAQ,EAAE,MAAM;MAAER,UAAU,EAAE;IAAS,CAAE;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,iBAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEyB,KAAK,EAAEzF,qBAAsB;IAC7B0F,QAAQ,EAAEC,CAAC,IAAI1F,wBAAwB,CAAC0F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IACxDL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEhC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,KAAK;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CAAC,eAChC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,SAAS;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,eACxC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,YAAY;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CACvC,CACH,CAAC,eACR/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,mBAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEyB,KAAK,EAAEvF,uBAAwB;IAC/BwF,QAAQ,EAAEC,CAAC,IAAIxF,0BAA0B,CAACwF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC1DL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEhC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,KAAK;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CAAC,eAChC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,SAAS;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,eACxC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,UAAU;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAAC,eAC1C/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,UAAU;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CACnC,CACH,CAAC,eACR/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,aAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEN,IAAI,EAAC,MAAM;IACX+B,KAAK,EAAErF,SAAU;IACjBsF,QAAQ,EAAEC,CAAC,IAAItF,YAAY,CAACsF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC5CL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjC,CACI,CAAC,eACR/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,WAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEN,IAAI,EAAC,MAAM;IACX+B,KAAK,EAAEnF,OAAQ;IACfoF,QAAQ,EAAEC,CAAC,IAAIpF,UAAU,CAACoF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC1CL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjC,CACI,CAAC,eACR/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,iBAEL,eAAA/F,KAAA,CAAAwF,aAAA;IACEyB,KAAK,EAAE/E,oBAAqB;IAC5BgF,QAAQ,EAAEC,CAAC,IAAIhF,uBAAuB,CAACgF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IACvDL,KAAK,EAAE;MAAES,UAAU,EAAE;IAAS,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEhC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,KAAK;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eACtC/F,KAAA,CAAAwF,aAAA;IAAQyB,KAAK,EAAC,MAAM;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CACjC,CACH,CACJ,CAAC,EACL,CAAC3D,iBAAiB,gBACjBpC,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,6CAA8C,CAAC,GAC5Ef,oBAAoB,CAACgB,MAAM,KAAK,CAAC,gBACnChG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,yCAA0C,CAAC,gBAE1E/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3Bf,oBAAoB,CAACiB,GAAG,CAAChB,EAAE,iBAC1BjF,KAAA,CAAAwF,aAAA;IAAIU,GAAG,EAAEjB,EAAE,CAAClB,GAAI;IAAC0B,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzC/F,KAAA,CAAAwF,aAAA;IAAMC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClCd,EAAE,CAACuB,UAAU,GAAG,IAAI,GAAGvB,EAAE,CAACC,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,IACnD,CAAC,eACPlF,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjCd,EAAE,CAACC,IAAI,CAACuB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGzB,EAAE,CAACC,IAAI,CAACyB,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC,EAAC1B,EAAE,CAACuB,UAAU,GAAG,YAAY,GAAG,EACnF,CAAC,eACLxG,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBACxB,EAACd,EAAE,CAACI,MAAM,eAACrF,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,UACpB,EAACd,EAAE,CAACzB,SAAS,CAAC4C,MAAM,CAACC,IAAI,eAACrG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,aAC7B,EAACd,EAAE,CAACzB,SAAS,CAAC2C,iBAAiB,eAACnG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,YACvC,EAACd,EAAE,CAACxB,MAAM,CAACgD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGzB,EAAE,CAACxB,MAAM,CAACkD,KAAK,CAAC,CAAC,CAC7D,CAAC,eACJ3G,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/F,KAAA,CAAAwF,aAAA;IACEe,OAAO,EAAEA,CAAA,KAAMjB,SAAS,CAAC,aAAa,EAAEL,EAAE,CAAE;IAC5CQ,SAAS,EAAC,eAAe;IACzBmB,KAAK,EAAE;MAAEU,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvD,cAEO,CACL,CACF,CACH,CACL,CACC,CAEC,CAAC,EAGTzD,SAAS,IAAIE,YAAY,iBACxBxC,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5B/F,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5B/F,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B/F,KAAA,CAAAwF,aAAA;IAAIC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBvD,YAAY,CAAC0C,IAAI,KAAK,SAAS,GAAG,iBAAiB,GAAG,qBACrD,CAAC,eACLlF,KAAA,CAAAwF,aAAA;IAAQe,OAAO,EAAEhB,UAAW;IAACE,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAEpD,CACL,CAAC,eACN/F,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBvD,YAAY,CAAC0C,IAAI,KAAK,SAAS,gBAC9BlF,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,iBAAuB,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACoD,iBAAqB,CAAC,eAC7EnG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,OAAa,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACqD,MAAM,CAACC,IAAI,EAAC,IAAE,EAAC7D,YAAY,CAACO,IAAI,CAACqD,MAAM,CAACE,KAAK,EAAC,GAAI,CAAC,eAChGtG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,SAAe,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACU,MAAM,CAACgD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGlE,YAAY,CAACO,IAAI,CAACU,MAAM,CAACkD,KAAK,CAAC,CAAC,CAAK,CAAC,eACtH3G,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,iBAAuB,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAAC0E,aAAa,IAAI,KAAS,CAAC,eAClFzH,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CAAC,WAAE,EAACvD,YAAY,CAACO,IAAI,CAAC2E,OAAO,IAAI,CAAK,CAC9D,CAAC,gBAEN1H,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,OAAa,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACmC,IAAI,CAACuB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGlE,YAAY,CAACO,IAAI,CAACmC,IAAI,CAACyB,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC,EAACnE,YAAY,CAACO,IAAI,CAACyD,UAAU,GAAG,YAAY,GAAG,EAAM,CAAC,eACnKxG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,SAAe,CAAC,WAAE,EAACvD,YAAY,CAACO,IAAI,CAACsC,MAAU,CAAC,eAC3DrF,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACS,SAAS,CAAC2C,iBAAqB,CAAC,eAChFnG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,OAAa,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACS,SAAS,CAAC4C,MAAM,CAACC,IAAQ,CAAC,eACvErG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,SAAe,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACU,MAAM,CAACgD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGlE,YAAY,CAACO,IAAI,CAACU,MAAM,CAACkD,KAAK,CAAC,CAAC,CAAK,CAAC,eACtH3G,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,OAAa,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACqC,SAAS,GAAG,IAAID,IAAI,CAAC3C,YAAY,CAACO,IAAI,CAACqC,SAAS,CAAC,CAACuC,cAAc,CAAC,CAAC,GAAG,oBAAwB,CAAC,EAC1InF,YAAY,CAACO,IAAI,CAACyD,UAAU,iBAAIxG,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAG/F,KAAA,CAAAwF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,cAAoB,CAAC,KAAC,EAACvD,YAAY,CAACO,IAAI,CAACyD,UAAc,CAChG,CAEJ,CACF,CACF,CACN,eAGDxG,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/B/F,KAAA,CAAAwF,aAAA;IAAGC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBACjB,eAAA/F,KAAA,CAAAwF,aAAA,CAACpF,IAAI;IAACwH,EAAE,EAAC,SAAS;IAACnC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAY,CAClF,CACA,CACF,CAAC;AAEV,CAAC;AAED,eAAexF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}